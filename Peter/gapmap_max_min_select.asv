function sigmax = gapmap_max_min_select(spec,ev,specd,evd,maxi,mini,maxid,minid)
%gapmap_max_min_select - takes the maxima determined by
%gapmap_maxima_minima, and selects out the ones that are most significant.
%For that it uses three criteria: the difference between the maximum
%rising and falling slope closest to the maximum position, the standard
%deviation of the values of the spectrum in the range between the closest
%maximum falling and rising slope, and the difference between the maximum
%and the closest minimum nearby. For that three empirical values were
%chosen as threshold; if two of the three are above threshold the maximum
%is deemed significant.
% spec - spectrum
% ev - energy values of spectrum
% specd - first derivative of spectrum
% evd - energy values of first derivative
% maxi - energy values of maxima in spectrum
% mini - energy values of minima in spectrum
% maxid - energy values of maxima in first derivative of spectrum
% minid - energy values of minima in first derivative of spectrum
% dum# - dummy variables that are used

% number of maxima to be tested
lmax = length(maxi);

% counter variable
tc =1;

% figure, plot(ev,spec,'k.-',evd,specd,'m.-')

for i=1:lmax
    %% Find position of closest maximum rising slope
    % dum1 contains the difference between the maximum positions of the
    % first derivative of the spectrum, and dum 2 restricts it to the
    % maxima to the left of the maximum of the spectrum
    dum1 = maxid - maxi(i);
    dum2 = find(dum1 < 0 );
    
    % now find the energy value of this closest maximum falling slope
    % value as well as the slope value, if there is no maximum to the left
    % use the first value of the slope
    if isempty(dum2)==1
        maxsl(tc) = specd(1);
        dum4 = evd(1);
        dum4ind = 1;
    else
        [dum3, clmaxs(tc)] = min(abs(maxid(dum2(1):dum2(end)) - maxi(i)));
    
        dum4 = maxid(clmaxs(tc));
    
        dum4ind = find(dum4 == evd);
        maxsl(tc) = specd(dum4ind);
    end
        
    %% Find position of closest maximum falling slope
    % the same as for the maximum rising slope only now the falling slope
    % has to be to the right of the maximum of the spectrum
    dum5 = minid - maxi(i);
    dum6 = find(dum5 > 0 );
    
    % again find the energy value and the value of the slope, and if there
    % is no minimum to the right take the last value of the slope
    if isempty(dum6)==1
        minsl(tc) = specd(end);
        dum8 = evd(end);
        dum8ind = length(evd);
    else
        [dum7, clmins(tc)] = min(abs(minid(dum6(1):dum6(end)) - maxi(i)));
    
        dum8 = minid(dum6(1)-1+clmins(tc));
    
        dum8ind = find(dum8 == evd);
    
        minsl(tc) = specd(dum8ind);
    end
    %% Calculate the value for the three criteria used in determining
    %% whether a maximum is significant or not
    % sld - slope difference, maximum rising - falling slope
    sld(tc) = maxsl(tc) - minsl(tc);
    
%     line([maxi(i) maxi(i)],[-1 1],'LineWidth',2,'Color','g');
%     line([dum4 dum4],[-1 1],'LineWidth',2,'Color','b');
%     line([dum8 dum8],[-1 1],'LineWidth',2,'Color','r');
    % psd - peak standard deviation (std). std of the energy values around
    % the peak, higher if the peak is pronounced, not if flat
    psd(tc) = std(spec(dum4ind : dum8ind));
    
    % calculate the position of the closest minimum in the spectrum to the
    % current maximum analysed and then 
    [dum9,clmin(tc)]=min(abs(mini - maxi(i)));
    
    maspv(tc) = spec( find(maxi(i) == ev));
    mispv(tc) = spec( find(mini(clmin(tc)) == ev));
    
    mamid(tc) = maspv(tc) - mispv(tc);
    
    %% Determine if at least two of the three criteria are above threshold
    if psd(tc) >= 0.008
        dum10 = 1;
    else
        dum10 = 0;
    end
    if sld(tc) >= 0.2
        dum11 = 1;
    else
        dum11 = 0;
    end
    if mamid(tc) >= 0.025
        dum12 = 1;
    else
        dum12 = 0;
    end
    
    mon(tc) = dum9 + dum10 + dum11;
    if mon(tc) >=2
        sigmax(tc) = maxi(i);
    end
    
    tc = tc+1;
end
% tc = tc-1;
% 
% figure, plot(ev,spec,'k.-',evd,specd,'m.-')
% for i=1:tc
%     if mon(i) >=2
%         line([maxi(i) maxi(i)],[-1 1],'LineWidth',2,'Color','g');
%     end
% end
% test = 1;

end