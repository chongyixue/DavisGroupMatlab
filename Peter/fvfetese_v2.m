function [Y,YT,YZ,map1c,map2c,topo1c,topo2c,dmap,cohmap,dimap,dtestmap, dtestmap2,YW, YZW, YTW]...
    = fvfetese_v2(data1,data2,tdata1,tdata2,bon,idata1,idata2,fen,tform)

% determine the number of energy layers in the map, as well as which layer
% is the zero energy layer, and which layer are plus/minus 2 meV, the
% average position of the coherence peaks
le = length(data1.e);

for j = 1:le
    if data1.e(j) == 0
        zlayer = j;
    end
    if data1.e(j) == 0.002
        p2layer = j;
    end
    if data1.e(j) == -0.002
        m2layer = j;
    end
    
end

%% load_color command used to have various colormaps for plotting 
load_color;


%% Gaussian blur (if wanted), but then you should also use Gaussian blurred
%% topos in fetese_alignment
gs = 15;
sig =3;

if strcmp('blur',bon)==1
    new_data1 = gauss_blur_image(data1,gs,sig);
    new_data2 = gauss_blur_image(data2,gs,sig);
    new_tdata1 = gauss_blur_image(tdata1,gs,sig);
    new_tdata2 = gauss_blur_image(tdata2,gs,sig);
    new_idata1 = gauss_blur_image(idata1,gs,sig);
    new_idata2 = gauss_blur_image(idata2,gs,sig);
else
    new_data1 = data1;
    new_data2 = data2;
    new_tdata1 = tdata1;
    new_tdata2 = tdata2;
    new_idata1 = idata1;
    new_idata2 = idata2;
end

%% Feenstra normalization (if wanted)
if strcmp('feenstra',fen)==1
    for i=1:length(new_data1.e)
        map1(:,:,i) = new_data1.map(:,:,i)./new_idata1.map(:,:,i);
        map2(:,:,i) = new_data2.map(:,:,i)./new_idata2.map(:,:,i);
    end
else
    map1 = new_data1.map;
    map2 = new_data2.map;
end



topo1 = new_tdata1.map;
topo2 = new_tdata2.map;
imap1 = new_idata1.map;
imap2 = new_idata2.map;

%% try the average filter if that makes a difference

h = fspecial('average',[3,3]);
topo1 = imfilter(topo1,h,'replicate');
topo2 = imfilter(topo2,h,'replicate');
imap1 = imfilter(imap1,h,'replicate');
imap2 = imfilter(imap2,h,'replicate');
map1 = imfilter(map1,h,'replicate');
map2 = imfilter(map2,h,'replicate');

%% Interpolate data if wanted
% [nx, ny, ne] = size(topo1);
% 
% intnum = 800;
% 
% if nx > ny
%     intpx = intnum;
%     intpy = intnum*ny/nx;
% elseif ny > nx
%     intpx = intnum*nx/ny;
%     intpy = intnum;
% elseif nx == ny
%     intpx = intnum;
%     intpy = intnum;
% end
% 
% topo1 = imresize(topo1,[intpx, intpy],'Cubic');
% topo2 = imresize(topo2,[intpx, intpy],'Cubic');
% 
% 
% dummap1 = map1;
% dummap2 = map2;
% dumimap1 = imap1;
% dumimap2 = imap2;
% 
% 
% 
% for i=1:le
%     intmap1 = imresize(dummap1(:,:,i),[intpx, intpy],'Cubic');
%     intmap2 = imresize(dummap2(:,:,i),[intpx, intpy],'Cubic');
%     intimap1 = imresize(dumimap1(:,:,i),[intpx, intpy],'Cubic');
%     intimap2 = imresize(dumimap2(:,:,i),[intpx, intpy],'Cubic');
%     
%     if i==1
%         map1 = intmap1;
%         map2 = intmap2;
%         imap1 = intimap1;
%         imap2 = intimap2;
%     else
%         map1 = cat(3,map1,intmap1);
%         map2 = cat(3,map2,intmap2);
%         imap1 = cat(3,imap1,intimap1);
%         imap2 = cat(3,imap2,intimap2);
%     end
%     
% end
% 
% clear dummap1 dummap2 dumimap1 dumimap2





%% Apply the transformation generated by "fetese"_alignment, this is assuming that
%% topo1 stayed fixed, and topo2 was translated, rotated, sheared, scaled
[nx, ny, ne] = size(map1);

map1c = map1;
topo1c = topo1;
imap1c = imap1;

if ~iscell(tform)==1

%     for i=1:le
    %     map1c(:,:,i) = imwarp(map1(:,:,i),tform,'OutputView',imref2d(size(fixed)),'Interp','Cubic');

        map2c = imwarp(map2,tform,'OutputView',imref2d(size(map1c)),'Interp','Cubic');
        
%         map2c = imwarp(map2,tform,'Interp','Cubic');
        [nmrx, nmry, nmrz] = size(map2c);

        map1c = imresize(map1c,[nmrx, nmry],'Cubic');

%         imap1c(:,:,i) = imwarp(imap1(:,:,i),tform,'OutputView',imref2d(size(fixed)),'Interp','Cubic');

        imap2c = imwarp(imap2,tform,'OutputView',imref2d(size(imap1c)),'Interp','Cubic');
%         imap2c = imwarp(imap2,tform,'Interp','Cubic');
        
        imap1c = imresize(imap1c,[nmrx, nmry],'Cubic');
%     end

    %     topo1c(:,:,i) = imwarp(topo1(:,:,i),tform,'OutputView',imref2d(size(fixed)),'Interp','Cubic');
    topo2c = imwarp(topo2,tform,'OutputView',imref2d(size(topo1c)),'Interp','Cubic');
    
%     topo2c = imwarp(topo2,tform,'Interp','Cubic');
    topo1c = imresize(topo1c,[nmrx, nmry],'Cubic');
else
    nl = length(tform);
    for i=0:nl-1
        
        topo1c2 = topo1(round(i*nx/nl)+1:round((i+1)*nx/nl),1:end,1);
        topo2c2 = topo2(round(i*nx/nl)+1:round((i+1)*nx/nl),1:end,1);
        
        map1c2 = map1(round(i*nx/nl)+1:round((i+1)*nx/nl),1:end,:);
        map2c2 = map2(round(i*nx/nl)+1:round((i+1)*nx/nl),1:end,:);
        
        imap1c2 = imap1(round(i*nx/nl)+1:round((i+1)*nx/nl),1:end,:);
        imap2c2 = imap2(round(i*nx/nl)+1:round((i+1)*nx/nl),1:end,:);
        
        tformal = tform{i+1};

        topo2al = imwarp(topo2c2,tformal,'OutputView',imref2d(size(topo1c2)),'Interp','Cubic');
        map2al = imwarp(map2c2,tformal,'OutputView',imref2d(size(map1c2)),'Interp','Cubic');
        imap2al = imwarp(imap2c2,tformal,'OutputView',imref2d(size(imap1c2)),'Interp','Cubic');
        
        if i==0
            topo2c = topo2al;
            map2c = map2al;
            imap2c = imap2al;
        else
            topo2c = cat(1,topo2c,topo2al);
            map2c = cat(1,map2c,map2al);
            imap2c = cat(1,imap2c,imap2al);
        end
    end
end



%% Create the differnce maps
[nx, ny, ne] = size(map1c);

Y = zeros(nx, ny);
YZ = zeros(nx, ny);
YT = zeros(nx, ny);
cohmap = zeros(nx,ny,3);
dmap = zeros(nx,ny,ne);
dimap = zeros(nx,ny,ne);
nmap1 = zeros(nx,ny,ne);
nmap2 = zeros(nx,ny,ne);

for i=1:nx
    for j=1:ny
        YZ(i,j) =  abs( map1c(i,j,zlayer) - map2c(i,j,zlayer) );
        Y(i,j) = sum(abs( map1c(i,j,zlayer-1:zlayer+1) - map2c(i,j,zlayer-1:zlayer+1) ));
        
        %% just for 40520A00 since there is a different energy layers used
%          Y(i,j) = (abs( map1c(i,j,zlayer-1) - map2c(i,j,zlayer) ))+...
%              (abs( map1c(i,j,zlayer) - map2c(i,j,zlayer+5) ))+...
%              (abs( map1c(i,j,zlayer+1) - map2c(i,j,zlayer+10) ));
%                  Y(i,j) = (abs( map1c(i,j,zlayer-1) - map2c(i,j,zlayer+65) ))+...
%              (abs( map1c(i,j,zlayer) - map2c(i,j,zlayer+70) ))+...
%              (abs( map1c(i,j,zlayer+1) - map2c(i,j,zlayer+75) ));
        YT(i,j) = abs(topo1c(i,j,:)-topo2c(i,j,:));
        spec1=squeeze(map1c(i,j,:));
%         spec1 = spec1 / max(spec1);
        spec2=squeeze(map2c(i,j,:));
%         spec2 = spec2 /max(spec2);
        nmap1(i,j,:) = spec1;
        nmap2(i,j,:) = spec2;
        
        spec = spec1;
%         cohmap(i,j,1) = (sum(spec(m2layer-1:m2layer+1))/3 +...
%             sum(spec(p2layer-1:p2layer+1))/3)/2 - ...
%             sum(spec(zlayer-1:zlayer+1))/3; 
%         cohmap(i,j,2) = sum(spec(m2layer-1:m2layer+1))/3; 
%         cohmap(i,j,3) = sum(spec(p2layer-1:p2layer+1))/3; 
%         
        dmap(i,j,:) = abs(map1c(i,j,:) - map2c(i,j,:));
        dimap(i,j,:) = abs(imap1c(i,j,:) - imap2c(i,j,:));
    end
end

% for i=1:ne
% %     img_plot2(dmap(:,:,i));
% %     title('LDOS');
% %     img_plot2(dimap(:,:,i));
% %     title('I');
%     dmap(:,:,i) = dmap(:,:,i) / mean(mean(dmap(:,:,i)));
% end

for i=1:floor(ne/2)
    testmap1(:,:,i) = nmap1(:,:,zlayer) - nmap1(:,:,zlayer+i);
    testmap2(:,:,i) = nmap2(:,:,zlayer) - nmap2(:,:,zlayer+i);
    dtestmap(:,:,i) = testmap1(:,:,i) - testmap2(:,:,i);
    testmap3(:,:,i) = nmap1(:,:,zlayer) - nmap1(:,:,zlayer-i);
    testmap4(:,:,i) = nmap2(:,:,zlayer) - nmap2(:,:,zlayer-i);
    dtestmap2(:,:,i) = testmap3(:,:,i) - testmap4(:,:,i);
end

%% Filter for noise spikes
% YZW = wiener2(YZ,[3,3]);
% YW = wiener2(Y,[3,3]);
% YTW = wiener2(YT,[3,3]);

YZW = medfilt2(YZ,[3,3]);
YW = medfilt2(Y,[3,3]);
YTW = medfilt2(YT,[3,3]);


%% Plot some of the results
% img_plot3(topo1c)
% img_plot3(topo2c)
% figure, img_plot4(cohmap(:,:,1))
% title('CohMap_1');
% figure, img_plot4(cohmap(:,:,2))
% title('CohMap_2_neg');
% figure, img_plot4(cohmap(:,:,3))
% title('CohMap_3_pos');

figure, img_plot4(Y)
title('Y');
figure, img_plot4(YW)
title('YW');

figure, img_plot4(YZ)
title('YZ');
figure, img_plot4(YZW)
title('YZW');

figure, img_plot4(YT)
title('YT');
figure, img_plot4(YTW)
title('YTW');


end
        