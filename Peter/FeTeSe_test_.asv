function FeTeSe_test_(data)

map = data.map;
en = data.e;
asp = data.ave';
% get the dimensions of the map: "nx" and "ny" being the spatial size in
% pixel; "nz" the number of energy layers
[nx ny nz]=size(map);
% "gmap" is an empty matrix which will be filled consecutively
gmapn=zeros(nx,ny,1);
minmapn=zeros(nx,ny,1);
gmapp=zeros(nx,ny,1);
minmapp=zeros(nx,ny,1);

for i=1:nx
    for j=1:ny
        
        specn(1:floor(nz/2)) = map(i,j,1:floor(nz/2));
        nspecn = specn/max(specn);
        sel=(max(nspecn)-min(nspecn))/30;
        [maxloc] = peakfinder(nspecn, sel, 0, 1);
        [minloc] = peakfinder(nspecn, sel, 1, -1);
        
        d=1;
        for k=1:length(minloc)
            if minloc(k)-maxloc(end) < 0 
                mp(d) = minloc(k);
                d = d+1;
            end
        end
        
        clear minloc maxloc
        
        fpvn = en(maxloc(end)); 
        gmapn(i,j) = fpvn;
        
        minmapn(i,j)=specn(max(mp));
        
        specp(1:(nz-floor(nz/2))) = map(i,j,floor(nz/2)+1:nz);
        nspecp = specp/max(specp);
        sel=(max(nspecp)-min(nspecp))/75;
        [maxloc] = peakfinder(nspecp, sel, 0, 1);
        [minloc] = peakfinder(nspecp, sel, 1, -1);
        
        d=1;
        for k=1:length(minloc)
            if minloc(k)-maxloc(end) < 0 
                mp(d) = minloc(k);
                d = d+1;
            end
        end
        
        
        fpvp = en(floor(nz/2)+maxloc(1));
        gmapp(i,j) = fpvp;
        
        spec(1:nz) = map(i,j,1:nz);
        figure, plot(en,spec)
        test=1;
    end
end
end