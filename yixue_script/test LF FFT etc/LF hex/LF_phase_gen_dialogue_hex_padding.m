function new_data = LF_phase_gen_dialogue_hex_padding(data,varargin)


if nargin>1
    qvals = varargin{1};
    b1xtext = num2str(qvals(1,1));
    b1ytext = num2str(qvals(1,2));
    b2xtext = num2str(qvals(2,1));
    b2ytext = num2str(qvals(2,2));
else
    b1xtext = num2str(size(data.map,1)/5);
    b1ytext = b1xtext;
    b2xtext = b1xtext;
    b2ytext = b1xtext;
end




fh=figure('Name', 'Bragg Peak Coordinates + Filter Width with padding',...
        'units','normalized', ...
        'Position',[0.3,0.3,0.3,0.1],...
        'Color',[0.6 0.6 0.6],...
        'MenuBar', 'none',...
        'NumberTitle', 'off',...
        'Resize','off');

uicontrol(fh,'Style','text',...
    'units','normalized',...
    'String','Q1x',...
       'Position', [0.05 0.85 0.12 0.15]);
bragg1x = uicontrol(fh,'Style', 'edit',... 
       'units','normalized',...              
       'Position', [0.05 0.58 0.12 0.25],...
        'String',b1xtext);

uicontrol(fh,'Style','text',...
    'units','normalized',...
    'String','Q1y',...
       'Position', [0.05 0.35 0.12 0.15]);
bragg1y = uicontrol(fh,'Style','edit',...
        'units','normalized',...
        'Position',[0.05 0.08 0.12 0.25],...
        'String',b1ytext);

uicontrol(fh,'Style','text',...
    'units','normalized',...
    'String','Q2x',...
    'Position', [0.20 0.85 0.12 0.15]);  
bragg2x = uicontrol(fh,'Style', 'edit',... 
       'units','normalized',...              
       'Position', [0.20 0.58 0.12 0.25],...
       'String',b2xtext);

uicontrol(fh,'Style','text',...
    'units','normalized',...
    'String','Q2y',...
       'Position', [0.20 0.35 0.12 0.15]);  
bragg2y = uicontrol(fh,'Style','edit',...
        'units','normalized',...
        'Position',[0.20 0.08 0.12 0.25],...
        'String',b2ytext);
 
   
uicontrol(fh,'Style','text',...
    'units','normalized',...
    'String','Q3x',...
    'Position', [0.35 0.85 0.12 0.15]);  
bragg3x = uicontrol(fh,'Style', 'text',... 
       'units','normalized',...
       'Position', [0.35 0.58 0.12 0.25],...
       'String','dependent');

uicontrol(fh,'Style','text',...
    'units','normalized',...
    'String','Q3y',...
       'Position', [0.35 0.35 0.12 0.15]);  
bragg3y = uicontrol(fh,'Style','text',...
        'units','normalized',...
        'Position',[0.35 0.08 0.12 0.25],...
        'String','dependent');

calc_but =  uicontrol(fh,'Style','pushbutton',...
       'String','Calculate',...
       'units','normalized',...
       'Position',[0.5 0.7 0.1 0.25],...
       'Callback',@Calculate_Callback);
   
flip = -1;
flip_but =  uicontrol(fh,'Style','pushbutton',...
       'String','flip',...
       'units','normalized',...
       'Position',[0.5 0.4 0.1 0.25],...
       'Callback',@Flip_Callback);
   
uicontrol(fh,'Style','text',...
    'units','normalized',...
    'String','Filter Width',...
    'Position', [0.65 0.6 0.12 0.15]);
%     'Position', [0.45 0.55 0.12 0.15]);

filt_width = uicontrol(fh,'Style','edit',...
    'units','normalized',...
    'Position',[0.65 0.3 0.12 0.25],...%     'Position',[0.45 0.25 0.12 0.25],...
    'String','1');
    
OK_but = uicontrol(fh,'Style','pushbutton',...
       'String','OK',...
       'units','normalized',...
       'Position',[0.8 0.6 0.15 0.25],...%        'Position',[0.7 0.6 0.25 0.25],...
       'Callback',@OK_Callback);

 cancel_but = uicontrol(fh,'Style','pushbutton',...
       'String','Cancel',...
       'units','normalized',...
       'Position',[0.8 0.25 0.15 0.25],...%        'Position',[0.7 0.25 0.25 0.25],...       
       'Callback',@cancel_Callback);
  
   
uiwait(gcf)
   
%%%%%%%%%%%%%%%%%%%%%%%%CALLBACK FUNCTIONS%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    function Calculate_Callback(hobject,eventdata)
        q_px(1,1) = str2double(get(bragg1x,'String'));
        q_px(2,1) = str2double(get(bragg1y,'String'));
        q_px(1,2) = str2double(get(bragg2x,'String'));
        q_px(2,2) = str2double(get(bragg2y,'String'));
        
        [x,y] = thirdBragg(q_px(:,1),q_px(:,2));
       
        bragg3x.String = num2str(x);
        bragg3y.String = num2str(y);
        
    end

    function Flip_Callback(hobject,eventdata)
       flip = flip*(-1);
       Calculate_Callback;
    end

    function OK_Callback(hobject,eventdata)
        
        q_px(1,1) = str2double(get(bragg1x,'String'));
        q_px(2,1) = str2double(get(bragg1y,'String'));
        q_px(1,2) = str2double(get(bragg2x,'String'));
        q_px(2,2) = str2double(get(bragg2y,'String'));
        
        [q_px(1,3),q_px(2,3)] = thirdBragg(q_px(:,1),q_px(:,2));
%         q_px(1,3) = str2double(get(bragg3x,'String'));
%         q_px(2,3) = str2double(get(bragg3y,'String'));        
        filt_w = str2double(get(filt_width,'String'));
        
%         phi_map = phase_map_hex(data.map,data.r,q_px,filt_w); 
        phi_map = phase_map_padding(data,q_px,filt_w);
%         figure,imagesc(phi_map);title("diagnose phi_map");
        assignin('base','phase_map_test',phi_map); %added
        phi_map_cor = phase_slip_correct_dialogue_hex(phi_map);
%         phi_map_cor2 = fix_phase_the_manlyway(phi_map);
        assignin('base','phase_map',phi_map_cor);
%         assignin('base','phase_map2',phi_map_cor2);
        [tx, ty] = LF_coordinates_hex2(1,filt_w,phi_map_cor,data);
        nx = size(data.map,2);
        tx = tx-mean(mean(tx))+ceil((nx+1)/2);
        ty = ty-mean(mean(ty))+ceil((nx+1)/2);
        
        new_data = LF_correct_map_v2(tx,ty,data);      
        new_data.tx = tx; new_data.ty = ty;
        new_data.phase_map = phi_map_cor;
        img_obj_viewer2(new_data);
        fprintf('New Data Created');
        close(fh);
    end
    function cancel_Callback(hObject,eventdata)       
        close(fh);
    end

    % third bragg for triagular lattice is actually constrained.
    function [q3x,q3y] = thirdBragg(q1,q2)
        
        nx = size(data.map,1);
        center = ceil((nx+1)/2);
        q1 = q1-center;
        q2 = q2-center;
        Q1 = sqrt(sum(q1.^2));
        Q2 = sqrt(sum(q2.^2));
        theta1 = atan2(q1(2),q1(1));
        theta2 = atan2(q2(2),q2(1));

        diff1 = abs(mod(theta1,2*pi)-mod(theta2,2*pi));
        diff2 = 2*pi-diff1;
        diff = min(diff1,diff2);
        if abs(diff-pi/3)>abs(diff-2*pi/3) %diff closer to 120 deg
            theta2 = theta2-pi;
        end
        
        Q3 = sqrt(Q1^2+Q2^2-2*Q1*Q2*cos(theta2-theta1));
        
        top = Q2*cos(theta2)-Q1*cos(theta1);
        bottom = Q1*sin(theta1)-Q2*sin(theta2);
        theta3 = pi/2+atan(top/bottom);
        
        % convert back to px coordinates
        q3x = Q3*cos(theta3)*flip+center;
        q3y = Q3*sin(theta3)*flip+center;
        
        
    end


end