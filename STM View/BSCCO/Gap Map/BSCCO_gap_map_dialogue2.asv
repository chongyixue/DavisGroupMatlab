function BSCCO_gap_map_dialogue2(data)

fh = figure('Units','characters',...
'MenuBar','none',...
'Name','BSCCO Gapmap Parameters',...
'NumberTitle','off',...
'Position',[14 10 114 38],...
'Resize','off',...
'UserData',[],...
'Visible','on');

%Maps Types panel
h11 = uipanel('Parent',fh,...
'Units','characters',...
'Title','Generate the Following Maps:',...
'Clipping','on',...
'Position',[3 27.4615384615385 104.6 8.69230769230769]);

% Positive gap map selection
neg_gap = uicontrol('Parent',h11,...
'Units','characters',...
'Position',[1.6 0.999999999999998 19.8 1.76923076923077],...
'String','Negative Gap',...
'Style','checkbox');

% Average gap map selection
pos_gap = uicontrol('Parent',h11,...
'Units','characters',...
'Position',[1.6 3.07692307692308 19.4 2],...
'String','Positive Gap',...
'Style','checkbox');

% Negative gap map selection
avg_gap = uicontrol('Parent',h11,...
'Units','characters',...
'Position',[1.6 5.23076923076923 20.6 1.76923076923077],...
'String','Average Gap',...
'Style','checkbox');

% panel for method selection
h27 = uicontrol('Parent',fh,...
'Units','characters',...
'Position',[28 31.0769230769231 10.4 1.07692307692308],...
'String','Method:',...
'Style','text');

%Method popup menu
method = uicontrol('Parent',fh,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Position',[38.6 30.6923076923077 20.4 1.76923076923077],...
'String',{  'Peak Find'; 'MATLAB Peak Find';},...
'Style','popupmenu',...
'Value',1);

%Slope Threshold entry Entry
slope_thr_edit = uicontrol('Parent',h11,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Position',[86.2000000000001 6.15384615384615 9.8 1.53846153846154],...
'String',{  '0.001' },...
'Style','edit');

%Fit Width Threshold Entry
fit_width_edit = uicontrol('Parent',h11,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Position',[86.2000000000001 4.30769230769231 9.8 1.53846153846154],...
'String',{  '1' },...
'Style','edit');

%Smooth Width Entry
smooth_width_edit = uicontrol('Parent',h11,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Position',[86.2000000000001 2.46153846153846 9.8 1.53846153846154],...
'String',{  '1' },...
'Style','edit');

%Amplitude Threshold Entry
amp_thr_edit = uicontrol('Parent',h11,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Position',[86.2000000000001 0.461538461538462 9.8 1.53846153846154],...
'String',{  '0.0' },...
'Style','edit');

%Fit Width Title
h19 = uicontrol('Parent',h11,...
'Units','characters',...
'HorizontalAlignment','right',...
'Position',[68 4.53846153846154 16 1.07692307692308],...
'String','Fit Width',...
'Style','text');

% Smooth Width Title
h20 = uicontrol('Parent',h11,...
'Units','characters',...
'HorizontalAlignment','right',...
'Position',[68.2 2.69230769230769 15.8 1.07692307692308],...
'String','Smooth Width',...
'Style','text');

% Amplitude Threshold title
h21 = uicontrol('Parent',h11,...
'Units','characters',...
'HorizontalAlignment','right',...
'Position',[62.2 0.692307692307692 21.8 1.07692307692308],...
'String','Amplitude Threshold',...
'Style','text');

% Slope Threshold title
h22 = uicontrol('Parent',h11,...
'Units','characters',...
'HorizontalAlignment','right',...
'Position',[67.8 6.38461538461539 16.2 1.07692307692308],...
'String','Slope Threshold',...
'Style','text');


%Panel for filters
h25 = uipanel('Parent',fh,...
'Units','characters',...
'Title','Filters',...
'Clipping','on',...
'Position',[3 4.07692307692308 105 16.5384615384615]);


% Description for Peak out of Range
h23 = uicontrol('Parent',fh,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[36.6 9.3846153846154 69.2 4.84615384615385],...
'String','If no satisfactory peak is found, set gap energy to the maximum value in the range.  Without this option, the pixel value is set to 0, the error code.',...
'Style','text');

% Peak out range of replacement checkbox
peak_out = uicontrol('Parent',fh,...
'Units','characters',...
'Position',[5.60000000000001 11.9230769230769 23 2.38461538461538],...
'String','Peak out of Range',...
'Style','checkbox' );


% description for Bad Pixel
h24 = uicontrol('Parent',fh,...
'Units','characters',...
'HorizontalAlignment','left',...
'Position',[36.6 6.2 68.8 5.2],...
'String',['Wherever there is a bad pixel (i.e. no coherence peak found) set',...
' that pixel equal to the average of its nearest neighbors. This option overrides',...
'"Reject Double Peaks" and resets the rejected pixel values to the average value.',...
' The "Peak out of Range" option overrides this option.'],...
'Style','text');

% bad pixel replacement checkbox
bad_pixel = uicontrol('Parent',fh,...
'Units','characters',...
'Position',[5.60000000000001 8.23076923076923 15 1.76923076923077],...
'String','Bad Pixel Replacement',...
'Style','checkbox');


% description of Skip Double Peaks
h26 = uicontrol('Parent',h25,...
'Units','characters',...
'CData',[],...
'HorizontalAlignment','left',...
'Position',[33.4 11 67.4 2.53846153846154],...
'String','If the found peak has a nearby neightbor within x% in height, then this pixel is discarded.',...
'Style','text',...
'UserData',[]);

% Skip double peaks
double_peak = uicontrol('Parent',fh,...
'Units','characters',...
'CData',[],...
'Position',[5.60000000000001 16.8461538461538 23.6 1.76923076923077],...
'String','Skip Double Peaks',...
'Style','checkbox',...
'UserData',[]);

% x percentage edit box
double_peak_percent = uicontrol('Parent',fh,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'CData',[],...
'Position',[21.6 15.0769230769231 10.8 1.53846153846154],...
'String',{ '10' },...
'Style','edit',...
'UserData',[]);

% x percentage title
h30 = uicontrol('Parent',fh,...
'Units','characters',...
'CData',[],...
'Position',[8.80000000000001 15.2307692307692 12.2 1.15384615384615],...
'String','Percent%(x):',...
'Style','text',...
'UserData',[]);

% panel for choosing energy range
h6 = uipanel('Parent',fh,...
'Units','characters',...
'Title','Energy Range to Search for Peaks:',...
'Clipping','on',...
'Position',[3 21.2307692307692 77.2 5.61538461538462]);

%start energy text box
h7 = uicontrol('Parent',h6,...
'Units','characters',...
'Position',[1 1.69230769230769 15.8 1.15384615384615],...
'String','Start Energy:',...
'Style','text');

%end energy text box
h8 = uicontrol('Parent',h6,...
'Units','characters',...
'Position',[39.2 1.61538461538462 15.4 1.30769230769231],...
'String','End Energy:',...
'Style','text');

%end energy
end_energy_list = uicontrol('Parent',h6,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Position',[54.8 1.07692307692308 19 2],...
'String', num2str(1000*data.e','%10.2f'),...
'Style','popupmenu',...
'Value',length(data.e));


%start energy
start_energy_list = uicontrol('Parent',h6,...
'Units','characters',...
'BackgroundColor',[1 1 1],...
'Position',[16.8 1.07692307692308 19 2],...
'String', num2str(1000*data.e','%10.2f'),...
'Style','popupmenu',...
'Value',1);

%OK button
generate = uicontrol('Parent',fh,...
'Units','characters',...
'Position',[58.8 1.38461538461538 13.8 1.69230769230769],...
'String','Generate','Callback',@generate_Callback);

%cancel button
close = uicontrol('Parent',fh,...
'Units','characters',...
'Position',[42.6 1.38461538461538 13.8 1.69230769230769],...
'String','Close','Callback',@close_Callback);

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%Callback Functions%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    function close_Callback(hObject,eventdata)
        delete(fh)
    end

    function generate_Callback(hObject,eventdata)
            
        % Determine which maps to generate
        map_optn = [0 0 0];
        
        if (get(pos_gap,'Value') == get(pos_gap,'Max'))
            map_optn(2) = 1;
        end
        if (get(neg_gap,'Value') == get(neg_gap,'Max'))
            map_optn(3) = 1;
        end
        if (get(avg_gap,'Value') == get(avg_gap,'Max'))
            map_optn(1) = 1;
        end
                      
        start_energy_ind = get(start_energy_list,'Value');
        end_energy_ind = get(end_energy_list,'Value');
     
        % check energy indices to make sure they make sense (start index is
        % set to be smaller than end index)
        if start_energy_ind > end_energy_ind
            tmp = end_energy_ind;
            end_energy_ind = start_energy_ind;
            start_energy_ind = tmp;
        elseif start_energy_ind == end_energy_ind
            display('Starting and Ending Energies Must Be Different');
            return;
        end
        
        dbl_pk_optn = 0; 
        dbl_pk_percent  = str2double(get(double_peak_percent,'String'))/100;
        
        bad_px_optn = 0;
        pk_rng_optn = 0;
        
        % Get filter parameters
        if (get(double_peak,'Value') == get(double_peak,'Max'))
            dbl_pk_optn = 1;       
        end
        if (get(bad_pixel,'Value') == get(bad_pixel,'Max'))
            bad_px_optn = 1;
        end
        if (get(peak_out,'Value') == get(peak_out,'Max'))
            pk_rng_optn = 1;
        end        	
   
        if sum(map_optn) == 0
            display('No Map Chosen');
            return;
        else
            if get(method,'Value') == 1

                % Get peak finding parameters for method 1
                slope_thr = str2double(get(slope_thr_edit,'String'));
                fit_width = str2double(get(fit_width_edit,'String'));
                smooth_width = str2double(get(smooth_width_edit,'String'));
                amp_thr  = str2double(get(amp_thr_edit,'String'));
                gmaps = BSCCO_gap_map1(data,slope_thr,fit_width,smooth_width,amp_thr,...
                                      start_energy_ind,end_energy_ind,...
                                      map_optn,dbl_pk_optn,dbl_pk_percent,pk_rng_optn,bad_px_optn);                      
            elseif get(method,'Value') == 2
                gmaps = BSCCO_gap_map2(data,start_energy_ind,end_energy_ind,...
                                      map_optn,dbl_pk_optn,dbl_pk_percent,pk_rng_optn,bad_px_optn);                      
            end
            if isempty(gmaps)
                display('No Maps Generated')
                return;
            end
            if map_optn(1) == 1              
         
                g_data = make_struct;
                g_data.r = data.r;
                g_data.type = 4; %process type
                g_data.name = data.name;
                g_data.var = '_Gap_Map_Avg';
                g_data.e(1) = 1;
                %g_data.map = gmaps{3};
                g_data.map = gmaps.avg;
                g_data.ave = mean(mean(g_data.map));
                g_data.ops = data.ops;
                g_data.ops{end+1} = ['Average Gap Map: Start Energy ' num2str(data.e(start_energy_ind)*1000) ' meV - ',...
                                'End Energy ' num2str(data.e(end_energy_ind)*1000) ' meV - Options: Double Peak Reject ',...
                                num2str(dbl_pk_optn) ' ' num2str(dbl_pk_percent) '% - Peak Out of Range Option: ',...
                                num2str(pk_rng_optn) ' - Bad Pixel Option: ' num2str(bad_px_optn) ' - Peak Find Parameters: ',...
                                'Slope Threshold ' num2str(slope_thr) ', Fit Width ' num2str(fit_width) ', Smooth Width ',...
                                num2str(smooth_width) ', Amplitude Threshold ' num2str(amp_thr) '.'];

                img_obj_viewer2(g_data)
            end
            if map_optn(2) == 1
                g_data = make_struct;
                g_data.r = data.r;
                g_data.type = 4; %process type
                g_data.name = data.name;
                g_data.var = '_Gap_Map_Pos';
                g_data.e(1) = 0.001;
                %g_data.map = gmaps{1};
                g_data.map = gmaps.pos;
                g_data.ave = mean(mean(g_data.map));
                g_data.ops = data.ops;
                g_data.ops{end+1} = ['Positive Gap Map: Start Energy ' num2str(data.e(start_energy_ind)*1000) ' meV - ',...
                                'End Energy ' num2str(data.e(end_energy_ind)*1000) ' meV - Options: Double Peak Reject ',...
                                num2str(dbl_pk_optn) ' ' num2str(dbl_pk_percent) '% - Peak Out of Range Option: ',...
                                num2str(pk_rng_optn) ' - Bad Pixel Option: ' num2str(bad_px_optn) ' - Peak Find Parameters: ',...
                                'Slope Threshold ' num2str(slope_thr) ', Fit Width ' num2str(fit_width) ', Smooth Width ',...
                                num2str(smooth_width) ', Amplitude Threshold ' num2str(amp_thr) '.'];

                img_obj_viewer2(g_data)
            end        
            if map_optn(3) == 1
                g_data = make_struct;
                g_data.r = data.r;
                g_data.type = 4; %process type
                g_data.name = data.name;
                g_data.var = '_Gap_Map_Neg';
                g_data.e(1) = 0.001;
                %g_data.map = gmaps{2};
                g_data.map = gmaps.neg;
                g_data.ave = mean(mean(g_data.map));
                g_data.ops = data.ops;
                g_data.ops{end+1} = ['Negative Gap Map: Start Energy ' num2str(data.e(start_energy_ind)*1000) ' meV - ',...
                                'End Energy ' num2str(data.e(end_energy_ind)*1000) ' meV - Options: Double Peak Reject ',...
                                num2str(dbl_pk_optn) ' ' num2str(dbl_pk_percent) '% - Peak Out of Range Option: ',...
                                num2str(pk_rng_optn) ' - Bad Pixel Option: ' num2str(bad_px_optn) ' - Peak Find Parameters: ',...
                                'Slope Threshold ' num2str(slope_thr) ', Fit Width ' num2str(fit_width) ', Smooth Width ',...
                                num2str(smooth_width) ', Amplitude Threshold ' num2str(amp_thr) '.'];

                img_obj_viewer2(g_data)
            end
        end
    end
end