%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% CODE DESCRIPTION: The function takes as input a data map and four points, 
% the first two as pretranforms of the second two.  It then generates a 
% transformation matrix that defines the transformation from the first 
% set of points to the second set.  The transformation matrix is then 
% applied to the data map.  Such as tranformation is a composition of
% rotations, shears, expansions. 
%
% ALGORITHM: Finding the transformation matrix follows from taking the
% set of equations given by  
% T*(p,q)=(x,y) and T*(r,s)=(w,z) where T = [a b; c d] is unknown 
% and rewriting them to solve for a,b,c,d which gives
% [ p q 0 0 ] [a] = [x]
% [ 0 0 p q ] [b]   [y]
% [ r s 0 0 ] [c]   [w]
% [ 0 0 r s ] [d]   [z]
%
% It is then a simple matrix inversion to solve for a,b,c,d.
% The actual image manipulation is done using the image processing toolgox
% and 'imtransform'
%
% INPUTS: pt1 and pt2 are the positions of the Bragg peaks. Data can be a
% STM structure or just and image.  In case where it is only an image then
% varargin sets the coordinates.  Otherwise, the data structure provides
% the information.
%
% CODE HISTORY
%
% 080131 MHH Created
% 101016 MHH Modified to work with STM_View
% 
function transform = linear2D_map_correct(pt1,pt2,data,varargin)
% 
% if isstruct(data) % check if data is a full data structure
%  
%     img = data.map;
%     coord = data.r;    
% else % single data image
%   
%     img = data;
%     coord = varargin{1};
% end

img = data;
coord = varargin{1};

A = [pt1(1) pt1(2); pt2(1) pt2(2)];
%A = [x1 y1; x2 y2];

%Use the mean location of the observed Bragg peak to stretch
%image onto a square
mean_x = (abs(A(1,1)) + abs(A(2,1)))/2;
mean_y = (abs(A(1,2)) + abs(A(2,2)))/2;

meanv = (mean_x + mean_y)/2;
% vector of final position for atomic points to get stretched onto.
A0(1) = sign(A(1,1))*meanv ;A0(2) = sign(A(1,2))*meanv;
B0(1) = sign(A(2,1))*meanv; B0(2) = sign(A(2,2))*meanv;

M = [A(1,1) A(1,2)    0     0
       0      0    A(1,1) A(1,2) 
     A(2,1) A(2,2)    0     0
       0      0    A(2,1) A(2,2)];
   
   
b = [A0(1); A0(2); B0(1); B0(2)];

X = inv(M)*b;

xform2 = [X(1)   X(2)   0
          X(3)   X(4)   0
           0      0     1];

     
gtform = maketform('affine',xform2');
transform = imtransform(img, gtform,'linear',... 
                        'UData',[coord(1) coord(end)],...
                        'VData', [coord(1) coord(end)],...
                        'XData',[coord(1) coord(end)],...
                        'YData', [coord(1) coord(end)],...
                        'size', size(img));          
[xm,ym] = tformfwd(gtform, [A(1,1) A(1,2)], [A(2,1) A(2,2)])

end